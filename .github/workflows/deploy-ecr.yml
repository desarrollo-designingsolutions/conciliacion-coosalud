name: Build and Push to ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: conciliacion-coosalud

permissions:
  id-token: write   # Requerido para OIDC
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::207567776936:role/github-oidc-ecr-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # Push both tags
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "Image pushed:"
          echo "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "$ECR_REGISTRY/$ECR_REPOSITORY:latest"

      - name: Image digest
        run: echo "Image pushed successfully! ✅"

      - name: Force ECS deployment
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Forcing ECS service to deploy new image..."
          aws ecs update-service \
            --cluster conciliacion-cluster \
            --service conciliacion-svc \
            --force-new-deployment \
            --region ${{ env.AWS_REGION }}
          echo "Deployment initiated! ✅"
